lsp-mode client leveraging microsoft's [[https://github.com/Microsoft/python-language-server][python-language-server]]

* Installation

1. Install [[https://www.microsoft.com/net/download][dotnet-sdk]]
2. Clone and install [[https://github.com/Microsoft/python-language-server][python-language-server]]:
   #+BEGIN_SRC bash
   git clone https://github.com/Microsoft/python-language-server.git
   cd python-language-server/src/LanguageServer/Impl
   dotnet build -c Release
   #+END_SRC

   If you choose, compile the language server to a single executable
   with one of:
   #+BEGIN_SRC bash
   dotnet publish -c Release -r osx-x64   # mac
   ln -sf $(git rev-parse --show-toplevel)/output/bin/Release/osx-x64/publish/Microsoft.Python.LanguageServer ~/.local/bin/  # or whereever you put your executables
   #+END_SRC
   #+BEGIN_SRC  bash
   dotnet publish -c Release -r win10-x64 # windows 10
   #+END_SRC

3. Include ~lsp-python-ms~ in your config in your preferred manner. A
   minimal ~use-package~ initialization might be:

   #+BEGIN_SRC elisp
     (use-package lsp-python-ms
       :ensure nil
       :hook (python-mode . lsp)
       :config

       ;; for dev build of language server
       (setq lsp-python-ms-dir
             (expand-file-name "~/python-language-server/output/bin/Release/"))
       ;; for executable of language server
       (setq lsp-python-ms-executable
             "~/python-language-server/output/bin/Release/osx-x64/publish/Microsoft.Python.LanguageServer"))
   #+END_SRC

For developement, you might find it useful to run =cask install=.
* Credit

All credit to [[https://cpbotha.net][cpbotha]] on [[https://vxlabs.com/2018/11/19/configuring-emacs-lsp-mode-and-microsofts-visual-studio-code-python-language-server/][vxlabs]]!  This just tidies and packages his
work there
